<?xml version="1.0" encoding="UTF-8"?>
<!-- 
1、databaseSchemaUpdate属性取值：
 	flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常。
	true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建。
	create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）。
	drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）。 
2、deploymentMode属性取值：
	default: 把所有资源放在一个单独的发布包中，对这个发布包进行重复检测。 这是默认值，如果你没有指定参数值，就会使用它。
	single-resource: 为每个单独的资源创建一个发布包，并对这些发布包进行重复检测。 你可以单独发布每个流程定义，
	并在修改流程定义后只创建一个新的流程定义版本。
	resource-parent-folder: 把放在同一个上级目录下的资源发布在一个单独的发布包中，并对发布包进行重复检测。 当需要多资源需要创建发布包，
	但是需要根据共同的文件夹来组合一些资源时，可以使用它。
 -->
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<bean id="uuidGenerator" class="com.bcs.tja.activiti.IdGenerator"/>
	
<!-- 	<bean id="yzjTaskService" class="com.bcsyz.service.yzj.YZJTaskServiceImpl"/>
 -->	
     <!-- 加载activiti引擎 -->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
    	<property name="idGenerator" ref="uuidGenerator"/>
    
        <property name="dataSource" ref="dataSource_pmc" />
        <property name="transactionManager" ref="transactionManager" />
        
        <property name="databaseSchemaUpdate" value="true" />
        <property name="jobExecutorActivate" value="false" />
        
        <!-- 生成流程图的字体 -->
     	<property name="activityFontName" value="宋体"/>
     	<property name="labelFontName" value="宋体"/>
     		
	    
	    <!-- 资源的自动部署 -->
	    <!-- <property name="deploymentResources" value="classpath*:/com/frame/demo/diagrams/*.bpmn20.xml,/com/frame/demo/diagrams/*.bpmn" /> -->
	    <!-- <property name="deploymentMode" value="single-resource" /> -->
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <!--  定时器，异步操作， 延迟暂停、激活，等等-->
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>

    <!-- 集成REST服务需要的bean -->
   <!--  <bean id="restResponseFactory" class="org.activiti.rest.service.api.RestResponseFactory" />
    <bean id="contentTypeResolver" class="org.activiti.rest.common.application.DefaultContentTypeResolver" /> -->
	
</beans>    